name: CI/CD Build and Run Docker Container

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build -t regionalcontacts.api:latest -f ./src/RegionalContacts.Api/Dockerfile .

    - name: Tag Docker image
      run: |
        docker tag regionalcontacts.api:latest ${{ secrets.DOCKER_USERNAME }}/regionalcontacts.api:latest

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/regionalcontacts.api:latest

  test-unitario:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Restore dependencies
      run: dotnet restore tests/RegionalContacts.Tests/RegionalContacts.Tests.csproj

    - name: Build solution
      run: dotnet build tests/RegionalContacts.Tests/RegionalContacts.Tests.csproj --configuration Release --no-restore

    - name: Run tests
      run: dotnet test tests/RegionalContacts.Tests/RegionalContacts.Tests.csproj

  test-integracao:
    runs-on: ubuntu-latest
    needs: build

    services:
      db:
        image: mcr.microsoft.com/mssql/server
        env:
          SA_PASSWORD: "sql@123456"
          ACCEPT_EULA: "Y"
        options: >-
          --health-cmd "exit 0" 
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
        ports:
          - 1533:1433

      redis:
        image: redis:latest
        options: >-
          --health-cmd "exit 0" 
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
        ports:
          - 6380:6379

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '7.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Run tests
      env:
        ConnectionStrings__ConnectionString: "Data Source=host.docker.internal,1533;Initial Catalog=Fiap_Fase1_TechChallenge_Contatos;User ID=sa;Password=sql@123456;Connect Timeout=30;Encrypt=False;Trust Server Certificate=True;Application Intent=ReadWrite;Multi Subnet Failover=False"
        Redis__Port: 17379
      run: dotnet test tests/RegionalContacts.Tests/RegionalContacts.Tests.csproj

  deploy:
    runs-on: ubuntu-latest
    needs: test-integracao
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull Docker image
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/regionalcontacts.api:latest

    - name: Run Docker container
      run: |
        docker run -d -p 8080:8080 -p 8081:8081 --name regionalcontacts.api ${{ secrets.DOCKER_USERNAME }}/regionalcontacts.api:latest

    - name: Verify Docker container is running
      run: docker ps -a
