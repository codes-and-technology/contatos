 version: '3.4'

 services:
   db:
     user: root
     image: mcr.microsoft.com/mssql/server:2019-latest
     environment:
       ACCEPT_EULA: "Y"
       SA_PASSWORD: "sql@123456"
       MSSQL_PID: Express
     ports:
       - "1433:1433"
     volumes:
       - C:\dados\volumes\sqlserver\Fiap_Fase1_TechChallenge_Contatos:/var/opt/mssql/data
     networks:
       - minha-rede
   redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - minha-rede
   regionalcontacts.api:
    image: ${DOCKER_REGISTRY-}regionalcontactsapi
    environment:
      - ASPNETCORE_URLS=http://+:80
    build:
      context: .
      dockerfile: src/RegionalContacts.Api/Dockerfile      
    ports:
      - "5001:80"
    depends_on:
      - db
      - redis
    networks:
       - minha-rede

   prometheus:
    image: prom/prometheus
    container_name: prometheus_grafprom
    restart: always
    networks:
        - minha-rede
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:9090/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s

   node-exporter:
    image: prom/node-exporter
    networks:
      - minha-rede
    ports:
      - 9100:9100

   grafana:
    container_name: grafana
    image: grafana/grafana:master
    networks:
     - minha-rede
    ports:
      - "3000:3000"
    volumes:
        - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
        - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
        prometheus:
            condition: service_healthy
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3000/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s


 networks:
   minha-rede:

 volumes:
   db-data: