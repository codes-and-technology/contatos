apiVersion: apps/v1
kind: Deployment
metadata:
  name: consulting-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consulting-api
  template:
    metadata:
      labels:
        app: consulting-api
    spec:
      containers:
      - name: consulting-api
        image: 318914/consultingapi:latest  # Imagem do seu container
        ports:
        - containerPort: 80  # Porta onde a aplicação está ouvindo dentro do container
        env:
        - name: ASPNETCORE_URLS
          value: "http://+:80"  # O ASP.NET Core precisa escutar em todas as interfaces
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            configMapKeyRef:
              name: consulting-api-config
              key: ConnectionString
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.1"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readiness
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: consulting-api
spec:
  type: NodePort  # Usando NodePort para acesso local
  selector:
    app: consulting-api
  ports:
    - port: 80           # Porta exposta no serviço
      targetPort: 80      # Porta onde a aplicação está ouvindo no pod
      nodePort: 30080     # Porta exposta no nó local (seu computador)
